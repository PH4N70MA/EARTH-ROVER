
LineFallower.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000001fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001aa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001fe  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000230  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000270  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000da0  00000000  00000000  00000298  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c23  00000000  00000000  00001038  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a4  00000000  00000000  00001c5b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00002000  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005d0  00000000  00000000  00002034  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d8  00000000  00000000  00002604  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000026dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	0e d0       	rcall	.+28     	; 0x112 <main>
  f6:	57 c0       	rjmp	.+174    	; 0x1a6 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <_Z14motorsPinsInitv>:

void motorsPinsInit(void)
{
    //setam pini pentru motor ca iesire cu Valorile initiale 0
    //Initializam pini pentru motor
    DDRE |= (1 << DDE4) | (1 << DDE5) | (1 << DDE3);
  fa:	8d b1       	in	r24, 0x0d	; 13
  fc:	88 63       	ori	r24, 0x38	; 56
  fe:	8d b9       	out	0x0d, r24	; 13
    DDRG |= (1 << DDG5);
 100:	83 b3       	in	r24, 0x13	; 19
 102:	80 62       	ori	r24, 0x20	; 32
 104:	83 bb       	out	0x13, r24	; 19
    //setam in 0 pini pentru motor
    PORTE &= ~(1 << PORTE4) | ~(1 << PORTE5) | ~(1 << PORTE3);
 106:	8e b1       	in	r24, 0x0e	; 14
 108:	8e b9       	out	0x0e, r24	; 14
    PORTG &= ~(1 << LEFT_BACKWARD);
 10a:	84 b3       	in	r24, 0x14	; 20
 10c:	8f 7d       	andi	r24, 0xDF	; 223
 10e:	84 bb       	out	0x14, r24	; 20
 110:	08 95       	ret

00000112 <main>:
#include "main.h"


int main(void)
{
    motorsPinsInit();
 112:	f3 df       	rcall	.-26     	; 0xfa <_Z14motorsPinsInitv>
    while (1) 
    {
        LEFT_MOTOR_FORWARD();
 114:	8e b1       	in	r24, 0x0e	; 14
 116:	88 60       	ori	r24, 0x08	; 8
 118:	8e b9       	out	0x0e, r24	; 14
 11a:	84 b3       	in	r24, 0x14	; 20
 11c:	8f 7d       	andi	r24, 0xDF	; 223
 11e:	84 bb       	out	0x14, r24	; 20
        RIGHT_MOTOR_FORWARD();
 120:	8e b1       	in	r24, 0x0e	; 14
 122:	80 62       	ori	r24, 0x20	; 32
 124:	8e b9       	out	0x0e, r24	; 14
 126:	8e b1       	in	r24, 0x0e	; 14
 128:	8f 7e       	andi	r24, 0xEF	; 239
 12a:	8e b9       	out	0x0e, r24	; 14
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12c:	2f ef       	ldi	r18, 0xFF	; 255
 12e:	83 ed       	ldi	r24, 0xD3	; 211
 130:	90 e3       	ldi	r25, 0x30	; 48
 132:	21 50       	subi	r18, 0x01	; 1
 134:	80 40       	sbci	r24, 0x00	; 0
 136:	90 40       	sbci	r25, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <main+0x20>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0x2a>
 13c:	00 00       	nop
        _delay_ms(1000);
        STOP_MOTORS();
 13e:	8e b1       	in	r24, 0x0e	; 14
 140:	87 7c       	andi	r24, 0xC7	; 199
 142:	8e b9       	out	0x0e, r24	; 14
 144:	84 b3       	in	r24, 0x14	; 20
 146:	8f 7d       	andi	r24, 0xDF	; 223
 148:	84 bb       	out	0x14, r24	; 20
 14a:	2f ef       	ldi	r18, 0xFF	; 255
 14c:	83 ed       	ldi	r24, 0xD3	; 211
 14e:	90 e3       	ldi	r25, 0x30	; 48
 150:	21 50       	subi	r18, 0x01	; 1
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	90 40       	sbci	r25, 0x00	; 0
 156:	e1 f7       	brne	.-8      	; 0x150 <main+0x3e>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0x48>
 15a:	00 00       	nop
        _delay_ms(1000);
        LEFT_MOTOR_BACKWARD();
 15c:	84 b3       	in	r24, 0x14	; 20
 15e:	80 62       	ori	r24, 0x20	; 32
 160:	84 bb       	out	0x14, r24	; 20
 162:	8e b1       	in	r24, 0x0e	; 14
 164:	87 7f       	andi	r24, 0xF7	; 247
 166:	8e b9       	out	0x0e, r24	; 14
        RIGHT_MOTOR_BACKWARD();
 168:	8e b1       	in	r24, 0x0e	; 14
 16a:	80 61       	ori	r24, 0x10	; 16
 16c:	8e b9       	out	0x0e, r24	; 14
 16e:	8e b1       	in	r24, 0x0e	; 14
 170:	8f 7d       	andi	r24, 0xDF	; 223
 172:	8e b9       	out	0x0e, r24	; 14
 174:	2f ef       	ldi	r18, 0xFF	; 255
 176:	83 ed       	ldi	r24, 0xD3	; 211
 178:	90 e3       	ldi	r25, 0x30	; 48
 17a:	21 50       	subi	r18, 0x01	; 1
 17c:	80 40       	sbci	r24, 0x00	; 0
 17e:	90 40       	sbci	r25, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <main+0x68>
 182:	00 c0       	rjmp	.+0      	; 0x184 <main+0x72>
 184:	00 00       	nop
        _delay_ms(1000);
        STOP_MOTORS();
 186:	8e b1       	in	r24, 0x0e	; 14
 188:	87 7c       	andi	r24, 0xC7	; 199
 18a:	8e b9       	out	0x0e, r24	; 14
 18c:	84 b3       	in	r24, 0x14	; 20
 18e:	8f 7d       	andi	r24, 0xDF	; 223
 190:	84 bb       	out	0x14, r24	; 20
 192:	2f ef       	ldi	r18, 0xFF	; 255
 194:	83 ed       	ldi	r24, 0xD3	; 211
 196:	90 e3       	ldi	r25, 0x30	; 48
 198:	21 50       	subi	r18, 0x01	; 1
 19a:	80 40       	sbci	r24, 0x00	; 0
 19c:	90 40       	sbci	r25, 0x00	; 0
 19e:	e1 f7       	brne	.-8      	; 0x198 <main+0x86>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <main+0x90>
 1a2:	00 00       	nop
 1a4:	b7 cf       	rjmp	.-146    	; 0x114 <main+0x2>

000001a6 <_exit>:
 1a6:	f8 94       	cli

000001a8 <__stop_program>:
 1a8:	ff cf       	rjmp	.-2      	; 0x1a8 <__stop_program>
